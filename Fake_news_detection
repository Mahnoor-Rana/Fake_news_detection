import pandas as pd
import numpy as np 
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix
import itertools
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier


data = pd.read_csv('news.csv')
data.shape

data.head()

labels = data.label
labels.head()

#  splitting into test and train dataset
x_train,x_test,y_train,y_test = train_test_split(data ,labels,test_size = 0.2, random_state = 7)

# lets initialize tfid_vectorizer 
tfid_vec = TfidfVectorizer(stop_words='english',max_df=0.7)
#  fit_transform 
tfidf_train=tfidf_vectorizer.fit_transform(x_train) 
tfidf_test=tfidf_vectorizer.transform(x_test)

#  PassiveAggressiveClassifier is used to fit well on tfid_train, tfid_test
p_clf = PassiveAggressiveClassifier(max_iter=50)
p_clf.fit(tfidf_train,y_train)


y_pred = p_clf.predict(tfidf_test)
score = accuracy_score(y_test,y_pred)

score

print(f'Accuracy :{round(score*100,2)}%')
#  build confusion_matrix
conf_mat = confusion_matrix(y_test,y_pred,labels=['FAKE','REAL'])
conf_mat 















